{"version":3,"file":"components-Alert-Alert-stories.fea9ec62078b21e5ebaf.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AAAA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AAAA;AAEA;AAKA;AACA;AAAA;AACA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAGA;AAzCA;AA2CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sources":["webpack://c4-ui/./src/components/Alert/Alert.tsx"],"sourcesContent":["import React from \"react\";\nimport clsx from \"clsx\";\nimport { AlertProps, AlertVariant } from \"./Alert.types\";\nimport \"./Alert.scss\";\n\n/**\n * A stylized Code4rena alert for displaying important messages to users on the front-end.\n * This component has 4 available variants and support for including `redirectUrl` & `redirectLabel` props\n * for scenarios where redirection to another page is necessary.\n *\n * __Available variants:__\n * - `INFO`\n * - `MUTED`\n * - `WARNING`\n * - `ERROR`\n *\n * @param title - Small, emphasized message descriptor.\n * @param message - Main alert message.\n * @param redirectLabel - Anchor tag label for the provided `redirectUrl` prop.\n * @param redirectUrl - Relative path or absolute url to be navigated to.\n * @param variant - Style variant to be applied to rendered component.\n * @param className - String of custom classes to extend the default styling of the component.\n */\nconst Alert: React.FC<AlertProps> = ({\n  title,\n  message,\n  redirectLabel,\n  redirectUrl,\n  variant,\n  className,\n}) => {\n  const styling = clsx({\n    c4alert: true,\n    \"alert--info\": variant === AlertVariant.INFO,\n    \"alert--muted\": variant === AlertVariant.MUTED,\n    \"alert--warning\": variant === AlertVariant.WARNING,\n    \"alert--error\": variant === AlertVariant.ERROR,\n  });\n\n  return (\n    <div className={`${styling} ${className}`}>\n      {(variant === AlertVariant.WARNING || variant === AlertVariant.ERROR) && (\n        <div className=\"alert--icon\">\n          <img\n            src={\n              variant === AlertVariant.WARNING\n                ? \"/icons/warning.svg\"\n                : \"/icons/delete.svg\"\n            }\n            width={32}\n            height={32}\n          />\n        </div>\n      )}\n      <div className=\"alert--content\">\n        {title && <strong>{title}</strong>} {message && <p>{message}</p>}{\" \"}\n        {redirectUrl && (\n          <a href={redirectUrl} target=\"_blank\" rel=\"noreferrer noopener\">\n            {redirectLabel ?? \"Read more on this alert\"}\n          </a>\n        )}\n      </div>\n    </div>\n  );\n};\n\nAlert.defaultProps = {\n  title: \"\",\n  message: \"\",\n  redirectLabel: \"\",\n  redirectUrl: \"\",\n  /* @ts-ignore value in Enum */\n  variant: \"INFO\",\n  className: \"\",\n};\n\nexport default Alert;\n"],"names":[],"sourceRoot":""}