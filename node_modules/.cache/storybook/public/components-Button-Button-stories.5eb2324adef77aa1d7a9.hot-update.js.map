{"version":3,"file":"components-Button-Button-stories.5eb2324adef77aa1d7a9.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;AAAA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sources":["webpack://c4-ui/./src/components/Button/Button.tsx"],"sourcesContent":["import React from \"react\";\nimport clsx from \"clsx\";\nimport { ButtonProps, ButtonSize, ButtonVariant } from \"./Button.types\";\nimport \"./Button.scss\";\n\n/**\n * A stylized Code4rena button that can be rendered in 2 forms with 2 available variants.\n * This component will either render as a **button tag** or an **anchor tag** depending on whether or not the `href` prop is provided.\n *\n * __Available variants:__\n * - `PRIMARY`\n * - `SECONDARY`\n *\n * @param label - Label to be attached to the button.\n * @param type - HTML button element type.\n * @param variant - Style variant to be applied to rendered component.\n * @param disabled - Triggers disabled state of a button when enabled. Does not apply to links.\n * @param iconLeft - Relative path or absolute url to an icon/image. Renders icon to the left of label.\n * @param iconRight - Relative path or absolute url to an icon/image. Renders icon to the right of label.\n * @param size - Standard button size options\n * @param href - __Transforms button into a link.__ Relative path (in-app navigation) or absolute url (external navigation) of location to navigate to.\n * @param external - Determines whether navigation should occur on the same page or in a new tab.\n * @param onClick - Function to be triggered on button click. Does not apply to links.\n * @param className - String of custom classes to extend the default styling of the component.\n */\nconst Button: React.FC<ButtonProps> = ({\n  label,\n  type,\n  variant,\n  external,\n  disabled,\n  iconLeft,\n  iconRight,\n  size,\n  href,\n  onClick,\n  className,\n}) => {\n  const styling = clsx({\n    c4button: true,\n    \"button--primary\": variant === ButtonVariant.PRIMARY,\n    \"button--secondary\": variant === ButtonVariant.SECONDARY,\n    wide: size === ButtonSize.WIDE,\n  });\n\n  return href != null && href.length ? (\n    <a\n      target={external ? \"_blank\" : undefined}\n      rel={external ? \"noreferrer noopener\" : undefined}\n      href={href}\n      className={`${styling} ${className}`}\n    >\n      {/* If passing a relative/absolute path as icon */}\n      {iconLeft && <img alt=\"\" src={iconLeft} width={16} height={16} />}\n      {label} {external ? \"(opens in new tab)\" : \"\"}\n      {/* If passing a relative/absolute path as icon */}\n      {iconRight && <img alt=\"\" src={iconRight} width={16} height={16} />}\n    </a>\n  ) : (\n    <button\n      role=\"button\"\n      aria-label={label}\n      aria-disabled={disabled}\n      type={type ?? \"button\"}\n      className={`${styling} ${className}`}\n      onClick={onClick}\n      disabled={disabled}\n    >\n      {/* If passing a relative/absolute path as icon */}\n      {iconLeft && <img alt=\"\" src={iconLeft} width={16} height={16} />}\n\n      {label}\n      {/* If passing a relative/absolute path as icon */}\n      {iconRight && <img alt=\"\" src={iconRight} width={16} height={16} />}\n    </button>\n  );\n};\n\nButton.defaultProps = {\n  label: \"Button\",\n  /* @ts-ignore value in Enum */\n  type: \"button\",\n  /* @ts-ignore value in Enum */\n  variant: \"PRIMARY\",\n  disabled: false,\n  iconLeft: \"\",\n  iconRight: \"\",\n  /* @ts-ignore value in Enum */\n  size: \"NARROW\",\n  href: \"\",\n  external: false,\n  onClick: () => null,\n  className: \"\",\n};\n\nexport default Button;\n"],"names":[],"sourceRoot":""}